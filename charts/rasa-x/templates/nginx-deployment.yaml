{{- if .Values.nginx.enabled }}
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    {{- include "rasa-x.labels" . | nindent 4 }}
    app.kubernetes.io/component: nginx
spec:
  progressDeadlineSeconds: {{ .Values.global.progressDeadlineSeconds }}
  replicas: {{ default 1 .Values.nginx.replicaCount }}
  selector:
    matchLabels:
      {{- include "rasa-x.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: nginx
  template:
    metadata:
      labels:
        {{- include "rasa-x.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: nginx
        {{- if .Values.nginx.podLabels }}
{{ toYaml .Values.nginx.podLabels | indent 8 }}
        {{- end }}
    spec:
      automountServiceAccountToken: {{ .Values.nginx.automountServiceAccountToken }}
      {{ include "rasa-x.spec" . }}
      {{- if .Values.nginx.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nginx.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.nginx.tolerations }}
      tolerations:
{{ toYaml .Values.nginx.tolerations | indent 6 }}
      {{- end }}
      initContainers:
      - name: init-config
        image: dibi/envsubst
        command:
        - sh
        - -c
        - envsubst '${RASA_X_HOST} ${RASA_PRODUCTION_HOST}' < /workdir/rasax.nginx > /processed/rasax.nginx
        env:
        - name: "RASA_X_HOST"
          value: "{{ include "rasa-x.host" . }}.{{ .Release.Namespace }}.svc:{{ .Values.rasax.port }}"
        - name: "RASA_PRODUCTION_HOST"
          value: "{{ include "rasa-x.fullname" . }}-{{ .Values.rasa.versions.rasaProduction.serviceName }}.{{ .Release.Namespace }}.svc:{{ .Values.rasa.port }}"
        volumeMounts:
        - name: rasax-nginx-processed
          mountPath: /processed
        - name: rasax-nginx
          mountPath: /workdir
      volumes:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.nginx.name }}:{{ .Values.nginx.tag }}"
        imagePullPolicy: {{ .Values.images.pullPolicy }}
        command:
        {{- if .Values.nginx.command }}
          {{- toYaml .Values.nginx.command | nindent 10 }}
        {{- else }}
           - "/opt/bitnami/entrypoint.sh"
        {{- end }}
        args:
        {{- if .Values.nginx.args }}
          {{- toYaml .Values.nginx.args | nindent 10 }}
        {{- else }}
           - "/opt/bitnami/scripts/nginx/run.sh"
        {{- end }}
        ports:
        - name: "http"
          containerPort: 8080
          protocol: "TCP"
        livenessProbe:
          exec:
            command:
            - curl
            - localhost:8080/nginx_status
          initialDelaySeconds: {{ .Values.nginx.livenessProbe.initialProbeDelay }}
          failureThreshold: 10
        readinessProbe:
          exec:
            command:
            - curl
            - localhost:8080/nginx_status
          initialDelaySeconds: {{ .Values.nginx.readinessProbe.initialProbeDelay }}
        env:
        - name: "RASA_X_HOST"
          value: "{{ include "rasa-x.host" . }}.{{ .Release.Namespace }}.svc:{{ .Values.rasax.port }}"
        - name: "RASA_PRODUCTION_HOST"
          value: "{{ include "rasa-x.fullname" . }}-{{ .Values.rasa.versions.rasaProduction.serviceName }}.{{ .Release.Namespace }}.svc:{{ .Values.rasa.port }}"
        - name: "CUSTOM_ACTION_HOST"
          value: "{{ include "rasa-x.fullname" . }}-app.{{ .Release.Namespace }}.svc:{{ template "rasa-x.custom-actions.port" . }}"
        volumeMounts:
{{- if .Values.nginx.extraVolumeMounts }}
{{ toYaml .Values.nginx.extraVolumeMounts | indent 8 }}
{{- end }}
        - mountPath: "/opt/bitnami/nginx/conf/bitnami/terms"
          name: "agreement"
        - name: "nginx-entrypoint"
          mountPath: "/opt/bitnami/entrypoint.sh"
          subPath: "entrypoint.sh"
        - name: "nginx-conf"
          mountPath: "/tmp/nginx.conf"
          subPath: "nginx.conf"
        - name: "nginx-ssl-conf"
          mountPath: "/tmp/ssl.conf"
          subPath: "ssl.conf"
        - name: "rasax-nginx-processed"
          mountPath: "/tmp/rasax.nginx"
          subPath: "rasax.nginx"
        - name: "confd"
          mountPath: "/opt/bitnami/nginx/conf/conf.d"
        {{ if .Values.nginx.certificateSecret }}
        - name: "certificates"
          readOnly: true
          mountPath: "/opt/bitnami/certs"
        {{ end }}
        {{- with .Values.nginx.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      volumes:
{{- if .Values.nginx.extraVolumes }}
{{ toYaml .Values.nginx.extraVolumes | indent 6 }}
{{- end }}
      - configMap:
          items:
          - key: "agree"
            path: "agree.txt"
          name: {{ template "rasa-x.nginx.agreement" . }}
        name: "agreement"
      - configMap:
          defaultMode: 0755
          items:
          - key: "entrypoint.sh"
            path: "entrypoint.sh"
          name: {{ template "rasa-x.nginx.conf" . }}
        name: "nginx-entrypoint"
      - configMap:
          items:
          - key: "nginx.conf"
            path: "nginx.conf"
          name: {{ template "rasa-x.nginx.conf" . }}
        name: "nginx-conf"
      - configMap:
          items:
          - key: "ssl.conf"
            path: "ssl.conf"
          name: {{ template "rasa-x.nginx.conf" . }}
        name: "nginx-ssl-conf"
      - name: rasax-nginx
        configMap:
          items:
          - key: "rasax.nginx"
            path: "rasax.nginx"
          name: {{ template "rasa-x.nginx.conf" . }}
      - name: rasax-nginx-processed
        emptyDir: {}
      - name: confd
        emptyDir: {}
      {{ if .Values.nginx.certificateSecret }}
      - name: "certificates"
        secret:
          secretName: {{ .Values.nginx.certificateSecret }}
      {{ end }}
{{- end }}
